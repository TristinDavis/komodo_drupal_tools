{
  "keyboard_shortcut": "Ctrl+Shift+F", 
  "name": "Module Function", 
  "language": "JavaScript", 
  "trigger_enabled": false, 
  "value": [
    "/**", 
    " * Insert a properly formatted custom Drupal module function.", 
    " */", 
    "komodo.assertMacroVersion(3);", 
    "if (komodo.view) { komodo.view.setFocus(); }", 
    "", 
    "// Get the filename and split out the extension", 
    "var parts = ko.uriparse.baseName(ko.interpolate.currentFilePath()).split('.');", 
    "var filename = parts[0];", 
    "", 
    "// Get information about the function", 
    "var func = ko.dialogs.prompt2(\"Enter function information.\", \"function \" + filename + \"_\", \"\", \"Description:\", \"Function description.\", \"Create Drupal Module Function\");", 
    "var args = ko.dialogs.prompt2(\"Provide information on the function arguments and return value.\", \"Number of arguments:\", \"0\", \"Returned data: (optional)\", \"\", \"Function Arguments\");", 
    "var desc = func[1];", 
    "", 
    "// Don't print anything if a hook wasn't entered.", 
    "if (func[0] == null) {", 
    "  return;", 
    "}", 
    "", 
    "// Get argument information", 
    "var num_args = parseInt(args[0]);", 
    "var args_data = new Array;", 
    "for (i = 1; i <= num_args; i++) {", 
    "  args_data[i] = ko.dialogs.prompt2(\"Enter data for argument \" + i, \"Variable:\", \"$\", \"Description:\", \"Argument description.\", \"Argument \" + i);", 
    "}", 
    "", 
    "// Parse the argument information into descriptions and the function signature.", 
    "var arg_sig = new Array;", 
    "for (i in args_data) {", 
    "  desc += \"\\n * @param \" + args_data[i][0];", 
    "  desc += (args_data[i][1] ? \"\\n *   \" + args_data[i][1] : \"\");", 
    "  arg_sig[i - 1] = args_data[i][0];", 
    "}", 
    "", 
    "// Add the return data.", 
    "if (args[1]) {", 
    "  desc += \"\\n * @return\\n *   \" + args[1];", 
    "}", 
    "", 
    "// Print the comment and function to the view", 
    "komodo.view.selection = \"/**\\n * \" + desc + \"\\n */\\nfunction \" + filename + '_' + func[0] + \"(\" + arg_sig.join(', ') + \") {\\n\\n}\";", 
    "", 
    "// Move the cursor back to the function area and indent", 
    "ko.views.manager.currentView.scimoz.lineUp();", 
    "komodo.view.selection = \"  \";", 
    ""
  ], 
  "trigger": "trigger_postopen", 
  "rank": 100, 
  "version": "1.0.7", 
  "async": false, 
  "type": "macro"
}